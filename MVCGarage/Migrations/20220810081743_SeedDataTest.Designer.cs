// <auto-generated />
using System;
using MVCGarage.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MVCGarage.Migrations
{
    [DbContext(typeof(MVCGarageContext))]
    [Migration("20220810081743_SeedDataTest")]
    partial class SeedDataTest
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("MVCGarage.Models.Entities.Member", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("HasReceived2YearsProMembership")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PersonalIdentityNumber")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<DateTime>("ProMembershipToDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("PersonalIdentityNumber")
                        .IsUnique();

                    b.ToTable("Member");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FirstName = "Kalle",
                            HasReceived2YearsProMembership = false,
                            LastName = "Larsson",
                            PersonalIdentityNumber = "19810701-6666",
                            ProMembershipToDate = new DateTime(2022, 9, 9, 10, 17, 43, 548, DateTimeKind.Local).AddTicks(6695)
                        });
                });

            modelBuilder.Entity("MVCGarage.Models.Entities.PSpot", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.HasKey("Id");

                    b.ToTable("PSpot");

                    b.HasData(
                        new
                        {
                            Id = 1
                        },
                        new
                        {
                            Id = 2
                        },
                        new
                        {
                            Id = 3
                        },
                        new
                        {
                            Id = 4
                        },
                        new
                        {
                            Id = 5
                        },
                        new
                        {
                            Id = 6
                        },
                        new
                        {
                            Id = 7
                        },
                        new
                        {
                            Id = 8
                        },
                        new
                        {
                            Id = 9
                        },
                        new
                        {
                            Id = 10
                        });
                });

            modelBuilder.Entity("MVCGarage.Models.Entities.Vehicle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int>("Color")
                        .HasColumnType("int");

                    b.Property<int>("MemberId")
                        .HasColumnType("int");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("RegistrationNumber")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int>("VehicleTypeId")
                        .HasColumnType("int");

                    b.Property<int>("WheelCount")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MemberId");

                    b.HasIndex("RegistrationNumber")
                        .IsUnique();

                    b.HasIndex("VehicleTypeId");

                    b.ToTable("Vehicle");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Brand = "Volvo",
                            Color = 2,
                            MemberId = 1,
                            Model = "240",
                            RegistrationNumber = "ABC123",
                            VehicleTypeId = 1,
                            WheelCount = 4
                        },
                        new
                        {
                            Id = 2,
                            Brand = "Saab",
                            Color = 1,
                            MemberId = 1,
                            Model = "900",
                            RegistrationNumber = "BLA222",
                            VehicleTypeId = 1,
                            WheelCount = 4
                        },
                        new
                        {
                            Id = 3,
                            Brand = "BMW",
                            Color = 0,
                            MemberId = 1,
                            Model = "320i",
                            RegistrationNumber = "ALB333",
                            VehicleTypeId = 1,
                            WheelCount = 4
                        },
                        new
                        {
                            Id = 4,
                            Brand = "Toyota",
                            Color = 2,
                            MemberId = 1,
                            Model = "Yaris",
                            RegistrationNumber = "HEY332",
                            VehicleTypeId = 1,
                            WheelCount = 3
                        });
                });

            modelBuilder.Entity("MVCGarage.Models.Entities.VehicleAssignment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("ArrivalDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GetDate()");

                    b.Property<int>("PSpotId")
                        .HasColumnType("int")
                        .HasColumnName("PSpotsPSpotId");

                    b.Property<int>("VehicleId")
                        .HasColumnType("int")
                        .HasColumnName("VehiclesVehicleId()");

                    b.HasKey("Id");

                    b.HasIndex("PSpotId");

                    b.HasIndex("VehicleId");

                    b.ToTable("VehicleAssignment");
                });

            modelBuilder.Entity("MVCGarage.Models.Entities.VehicleType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<float>("NeededSize")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.ToTable("VehicleType");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Car",
                            NeededSize = 1f
                        },
                        new
                        {
                            Id = 2,
                            Name = "Motorcycle",
                            NeededSize = 0.33f
                        });
                });

            modelBuilder.Entity("MVCGarage.Models.Entities.Vehicle", b =>
                {
                    b.HasOne("MVCGarage.Models.Entities.Member", null)
                        .WithMany("Vehicles")
                        .HasForeignKey("MemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MVCGarage.Models.Entities.VehicleType", "VehicleType")
                        .WithMany()
                        .HasForeignKey("VehicleTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("VehicleType");
                });

            modelBuilder.Entity("MVCGarage.Models.Entities.VehicleAssignment", b =>
                {
                    b.HasOne("MVCGarage.Models.Entities.PSpot", "PSpot")
                        .WithMany("VehicleAssignments")
                        .HasForeignKey("PSpotId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MVCGarage.Models.Entities.Vehicle", "Vehicle")
                        .WithMany("VehicleAssignments")
                        .HasForeignKey("VehicleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PSpot");

                    b.Navigation("Vehicle");
                });

            modelBuilder.Entity("MVCGarage.Models.Entities.Member", b =>
                {
                    b.Navigation("Vehicles");
                });

            modelBuilder.Entity("MVCGarage.Models.Entities.PSpot", b =>
                {
                    b.Navigation("VehicleAssignments");
                });

            modelBuilder.Entity("MVCGarage.Models.Entities.Vehicle", b =>
                {
                    b.Navigation("VehicleAssignments");
                });
#pragma warning restore 612, 618
        }
    }
}
