@model ChangeViewModel

@{
    ViewData["Title"] = "Modify";
}

<div class="m-2">
    <a asp-action="Index">Back to Garage</a>
</div>

@if(@Model.ModifySuccess) {
<!-- Button trigger modal -->
<button type="button" id="clickable" class="btn btn-primary d-none" data-bs-toggle="modal" data-bs-target="#staticBackdrop">
  Launch static backdrop modal
</button>

<!-- Modal -->
<div class="modal fade" id="staticBackdrop" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="staticBackdropLabel">Your vehicle has now been modified</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        When you no longer want to stay parked. Choose Checkout in the Parked Vehicles List.
      </div>
      <div class="modal-footer">
        <a asp-action="Index" class="btn btn-primary">To Parked Vehicles List</a>
      </div>
    </div>
  </div>
</div>
<script src="/js/clickable.js"></script>
}
<script src="/js/clientValidationReset.js"></script>
<h2>Modify</h2>

<h3>Parked Vehicle</h3>
<hr />

<form asp-action="Modify">
    <div class="row">
        <div class="col-md-6">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Id" />
            <div class="form-floating">
                <select asp-for="Color" class="form-control" asp-items="@Html.GetEnumSelectList<Color>()"></select>
                <span asp-validation-for="Color" class="text-danger"></span>
                <label asp-for="Color" class="control-label"></label>
            </div>
            <div class="form-floating">
                <select asp-for="Type" class="form-control" asp-items="@Html.GetEnumSelectList<VehicleType>()"></select>
                <span asp-validation-for="Type" class="text-danger"></span>
                <label asp-for="Type" class="control-label"></label>
            </div>
            <div class="form-floating">
                <input type="hidden" id="RegistrationNumberId" value="@Html.IdFor(@Model=>@Model.RegistrationNumber)" />
                <input asp-for="RegistrationNumber" class="form-control" />
                <span asp-validation-for="RegistrationNumber" class="text-danger"></span>
                <label asp-for="RegistrationNumber" class="control-label"></label>
            </div>
        </div>
        <div class="col-md-6">
            <div class="form-floating">
                <input asp-for="Brand" class="form-control" />
                <span asp-validation-for="Brand" class="text-danger"></span>
                <label asp-for="Brand" class="control-label"></label>
            </div>
            <div class="form-floating">
                <input asp-for="Model" class="form-control" />
                <span asp-validation-for="Model" class="text-danger"></span>
                <label asp-for="Model" class="control-label"></label>
            </div>
            <div class="form-floating">
                <input asp-for="WheelCount" class="form-control" />
                <span asp-validation-for="WheelCount" class="text-danger"></span>
                <label asp-for="WheelCount" class="control-label"></label>
            </div>
        </div>
    </div>
    <div class="form-group mt-2">
        <span id="ErrorSpan" class="text-danger">@Model.Error</span>
    </div>
    <div class="form-group mt-2">
        <input type="submit" value="Save" class="btn btn-primary" />
    </div>
</form>



@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
